PS D:\Work University\DevOps\Quiz\devops_quiz> terraform apply -auto-approve  

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # docker_container.my_container will be created
  + resource "docker_container" "my_container" {
      + attach                                      = false
      + bridge                                      = (known after apply)
      + command                                     = (known after apply)
      + container_logs                              = (known after apply)
      + container_read_refresh_timeout_milliseconds = 15000
      + entrypoint                                  = (known after apply)
      + env                                         = (known after apply)
      + exit_code                                   = (known after apply)
      + hostname                                    = (known after apply)
      + id                                          = (known after apply)
      + image                                       = "node-express-app:latest"
      + init                                        = (known after apply)
      + ipc_mode                                    = (known after apply)
      + log_driver                                  = (known after apply)
      + logs                                        = false
      + must_run                                    = true
      + name                                        = "my-express-app"
      + network_data                                = (known after apply)
      + read_only                                   = false
      + remove_volumes                              = true
      + restart                                     = "no"
      + rm                                          = false
      + runtime                                     = (known after apply)
      + security_opts                               = (known after apply)
      + shm_size                                    = (known after apply)
      + start                                       = true
      + stdin_open                                  = false
      + stop_signal                                 = (known after apply)
      + stop_timeout                                = (known after apply)
      + tty                                         = false
      + wait                                        = false
      + wait_timeout                                = 60

      + healthcheck (known after apply)

      + labels (known after apply)

      + ports {
          + external = 3000
          + internal = 3000
          + ip       = "0.0.0.0"
          + protocol = "tcp"
        }
    }

  # docker_image.my_app will be created
  + resource "docker_image" "my_app" {
      + id          = (known after apply)
      + image_id    = (known after apply)
      + name        = "node-express-app:latest"
      + repo_digest = (known after apply)
    }

  # null_resource.execute_script will be created
  + resource "null_resource" "execute_script" {
      + id = (known after apply)
    }

Plan: 3 to add, 0 to change, 0 to destroy.
null_resource.execute_script: Creating...
null_resource.execute_script: Provisioning with 'local-exec'...
null_resource.execute_script (local-exec): Executing: ["cmd" "/C" "powershell.exe ./buildImg.ps1"]
null_resource.execute_script (local-exec): #0 building with "desktop-linux" instance using docker driver

null_resource.execute_script (local-exec): #1 [internal] load build definition from Dockerfile
null_resource.execute_script (local-exec): #1 transferring dockerfile: 206B done
null_resource.execute_script (local-exec): #1 DONE 0.0s

null_resource.execute_script (local-exec): #2 [internal] load metadata for docker.io/library/alpine:3.21
null_resource.execute_script (local-exec): #2 DONE 1.1s

null_resource.execute_script (local-exec): #3 [internal] load .dockerignore
null_resource.execute_script (local-exec): #3 transferring context: 109B done
null_resource.execute_script (local-exec): #3 DONE 0.0s

null_resource.execute_script (local-exec): #4 [1/5] FROM docker.io/library/alpine:3.21@sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c
null_resource.execute_script (local-exec): #4 resolve docker.io/library/alpine:3.21@sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c 
0.0s done
null_resource.execute_script (local-exec): #4 DONE 0.0s

null_resource.execute_script (local-exec): #5 [internal] load build context
null_resource.execute_script (local-exec): #5 transferring context: 7.94kB 0.0s done
null_resource.execute_script (local-exec): #5 DONE 0.0s

null_resource.execute_script (local-exec): #6 [2/5] RUN apk update && apk add --no-cache nodejs npm
null_resource.execute_script (local-exec): #6 CACHED

null_resource.execute_script (local-exec): #7 [3/5] WORKDIR /app
null_resource.execute_script (local-exec): #7 CACHED

null_resource.execute_script (local-exec): #8 [4/5] COPY . .
null_resource.execute_script (local-exec): #8 DONE 0.1s

null_resource.execute_script (local-exec): #9 [5/5] RUN npm install
null_resource.execute_script (local-exec): #9 1.508 npm warn old lockfile
null_resource.execute_script (local-exec): #9 1.508 npm warn old lockfile The package-lock.json file was created with an old version of npm,
null_resource.execute_script (local-exec): #9 1.508 npm warn old lockfile so supplemental metadata must be fetched from the registry.
null_resource.execute_script (local-exec): #9 1.508 npm warn old lockfile
null_resource.execute_script (local-exec): #9 1.508 npm warn old lockfile This is a one-time fix-up, please be patient...
null_resource.execute_script (local-exec): #9 1.508 npm warn old lockfile
null_resource.execute_script (local-exec): #9 3.575
null_resource.execute_script (local-exec): #9 3.575 added 69 packages, and audited 70 packages in 3s
null_resource.execute_script (local-exec): #9 3.575
null_resource.execute_script (local-exec): #9 3.575 14 packages are looking for funding
null_resource.execute_script (local-exec): #9 3.575   run `npm fund` for details
null_resource.execute_script (local-exec): #9 3.578
null_resource.execute_script (local-exec): #9 3.578 found 0 vulnerabilities
null_resource.execute_script (local-exec): #9 DONE 3.7s

null_resource.execute_script (local-exec): #10 exporting to image
null_resource.execute_script (local-exec): #10 exporting layers
null_resource.execute_script (local-exec): #10 exporting layers 0.4s done
null_resource.execute_script (local-exec): #10 exporting manifest sha256:08d5ec89194d90f03e98809ea1ff53bd1fdf7ce9c7d8de9c8c74f2ff450f63c7 0.0s done
null_resource.execute_script (local-exec): #10 exporting config sha256:c07a5a0cacec2bc7f5286a171d2028fe15b618a10044ce95a1465c4a5dbb81ef 0.0s done
null_resource.execute_script (local-exec): #10 exporting attestation manifest sha256:72f3422c77eeffd466bb397fc381b440031f806bd8b3dd7b715509460628ba2a 0.0s done
null_resource.execute_script (local-exec): #10 exporting manifest list sha256:58223cfef996757b04c6faa59537686c714d817adeec314fcf8fa1d0ab8e0c4c 0.0s done    
null_resource.execute_script (local-exec): #10 naming to docker.io/library/node-express-app:latest done
null_resource.execute_script (local-exec): #10 unpacking to docker.io/library/node-express-app:latest
null_resource.execute_script (local-exec): #10 unpacking to docker.io/library/node-express-app:latest 1.7s done
null_resource.execute_script (local-exec): #10 DONE 2.3s

null_resource.execute_script (local-exec): View build details: docker-desktop://dashboard/build/desktop-linux/desktop-linux/u7iket3rd10z5k4tnqcik0xul       
null_resource.execute_script (local-exec): Docker image 'node-express-app' built successfully.
null_resource.execute_script: Creation complete after 8s [id=1597707095988992033]
docker_image.my_app: Creating...
docker_image.my_app: Creation complete after 0s [id=sha256:58223cfef996757b04c6faa59537686c714d817adeec314fcf8fa1d0ab8e0c4cnode-express-app:latest]
docker_container.my_container: Creating...
docker_container.my_container: Creation complete after 4s [id=5deef89667ee1bd28aecfa5cabe8c745178fd8d7cb299a719cb41bbe014a19f3]